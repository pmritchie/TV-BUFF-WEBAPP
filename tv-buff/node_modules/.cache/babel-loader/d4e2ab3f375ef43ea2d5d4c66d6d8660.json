{"ast":null,"code":"var _jsxFileName = \"/Users/mikey/Documents/WDD359/tv-buff/src/pages/Favorites.js\";\nimport React, { Component } from 'react';\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\n\nclass Favorites extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      actors: [],\n      shows: [],\n      isLoaded: false,\n      search: '',\n      human: false // load favorites\n\n    };\n\n    this.fetchData = query => {\n      const hArray = [];\n      const sArray = []; // split between actor and show\n\n      query.forEach(data => {\n        if (data.human === true) {\n          hArray.push(data);\n        } else {\n          sArray.push(data);\n        }\n      });\n      console.log(hArray);\n      hArray.forEach(data => {\n        fetch(\"https://api.tvmaze.com/people/\".concat(data.id, \"?embed=castcredits\")).then(data => {\n          const output = data.json();\n          return output;\n        }).then(stuff => {\n          // push object to array\n          const data1 = [];\n          data1.push(stuff); // check for null, add data\n\n          data1.forEach(data => {\n            if (data.image == null) {\n              data.image = {\n                medium: \"\".concat(defPic),\n                large: './images/hikers.jpg'\n              };\n            }\n          }); // make actor objects\n\n          const bArray = data1.map(actor => ({\n            id: \"\".concat(actor.id),\n            name: \"\".concat(actor.name),\n            birthday: \"\".concat(actor.birthday),\n            image: \"\".concat(actor.image.medium),\n            fav: true\n          }));\n          return bArray;\n        }).then(stuff => {\n          console.log(stuff[0]);\n          this.setState(state => ({\n            actors: [...state.actors, stuff[0]]\n          }));\n        });\n      });\n      sArray.forEach(data => {\n        fetch(\" https://api.tvmaze.com/shows/\".concat(data.id)).then(data => {\n          const output = data.json();\n          return output;\n        }).then(stuff => {\n          // push object to array\n          const data1 = [];\n          data1.push(stuff); // check for null, add data\n\n          data1.forEach(data => {\n            if (data.image == null || data.rating.average == null) {\n              data.image = {\n                medium: \"\".concat(defPic),\n                large: './images/hikers.jpg'\n              };\n              data.rating = {\n                average: 'N/A'\n              };\n            }\n          }); // make show object\n\n          const sArray = data1.map(show => ({\n            id: \"\".concat(show.id),\n            name: \"\".concat(show.name),\n            rating: \"\".concat(show.birthday),\n            image: \"\".concat(show.image.medium),\n            fav: true\n          }));\n          return sArray;\n        }).then(stuff => {\n          this.setState(state => ({\n            shows: [...state.shows, stuff[0]]\n          }));\n        });\n      });\n      this.setState({\n        isLoaded: true\n      });\n    };\n\n    this.addFav = id => {\n      const favorites = [...JSON.parse(localStorage.getItem('favorites'))];\n      const actors = [...this.state.actors];\n      const shows = [...this.state.shows];\n      favorites.forEach((item, index) => {\n        if (item.id === id) {\n          console.log(item.id);\n          favorites.splice(index, 1);\n        }\n      });\n      actors.forEach((item, index) => {\n        if (item.id === id) {\n          console.log(item.id);\n          actors.splice(index, 1);\n        }\n      });\n      shows.forEach((item, index) => {\n        if (item.id === id) {\n          console.log(item.id);\n          shows.splice(index, 1);\n        }\n      });\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      this.setState({\n        actors\n      });\n      this.setState({\n        shows\n      }); // resest actors here to refresh without refreshing page\n      // window.location.reload();\n    };\n\n    this.detailed = (id, person) => {\n      const dID = {\n        dID: id,\n        human: person\n      };\n      localStorage.setItem('description', JSON.stringify(dID));\n      this.props.history.push('/Description');\n    };\n  }\n\n  componentDidMount() {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    console.log(favorites);\n    this.fetchData(favorites);\n  }\n\n  render() {\n    const _this$state = this.state,\n          err = _this$state.err,\n          isLoaded = _this$state.isLoaded,\n          actors = _this$state.actors,\n          shows = _this$state.shows;\n\n    if (err) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Error:\", err.message);\n    }\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      style: styles.div,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      style: styles.hContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      style: styles.headerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"col-6\",\n      style: styles.h1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Favorites\"))), React.createElement(\"h2\", {\n      style: styles.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"People\"), React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, isLoaded && actors.length > 0 ? actors.map(actor => {\n      const id = actor.id,\n            name = actor.name,\n            birthday = actor.birthday,\n            image = actor.image,\n            fav = actor.fav; // set person to true\n\n      const person = true; // load cards and insert dynamic data\n\n      return React.createElement(Card, {\n        style: styles.card,\n        key: id,\n        alt: \"\".concat(name, \" picture\"),\n        birthday: birthday,\n        image: image,\n        title: name,\n        fav: fav,\n        addFav: () => this.addFav(id, person),\n        detailed: () => this.detailed(id, person),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      });\n    }) : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"You haven't favorited anyone yet!\"))), React.createElement(\"h2\", {\n      style: styles.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Shows\"), React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, isLoaded && shows.length > 0 ? shows.map(show => {\n      const id = show.id,\n            name = show.name,\n            rating = show.rating,\n            image = show.image,\n            fav = show.fav;\n      const person = false;\n      return React.createElement(Card, {\n        style: styles.card,\n        key: id,\n        alt: \"\".concat(name, \" picture\"),\n        rating: \"Rating: \".concat(rating),\n        image: image,\n        title: name,\n        fav: fav,\n        addFav: () => this.addFav(id, person),\n        detailed: () => this.detailed(id, person),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      });\n    }) : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"You haven't favorited any shows yet!\"))));\n  }\n\n}\n\nexport default Favorites;\nconst styles = {\n  div: {\n    display: 'grid',\n    backgroundSize: '100%',\n    width: '100%',\n    hieght: '100%',\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780'\n  },\n  section: {\n    display: 'grid'\n  },\n  card: {\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780'\n  },\n  header: {\n    fontSize: '84px',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerCol: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '3rem'\n  },\n  searchCol: {\n    marginTop: '1rem'\n  },\n  h2: {\n    fontSize: '64px',\n    marginTop: '10rem',\n    marginLeft: '15rem'\n  },\n  hContainer: {\n    width: '100%',\n    marginTop: '5rem'\n  },\n  h1: {\n    fontSize: '64px'\n  }\n};","map":{"version":3,"sources":["/Users/mikey/Documents/WDD359/tv-buff/src/pages/Favorites.js"],"names":["React","Component","Header","Card","defPic","Favorites","state","actors","shows","isLoaded","search","human","fetchData","query","hArray","sArray","forEach","data","push","console","log","fetch","id","then","output","json","stuff","data1","image","medium","large","bArray","map","actor","name","birthday","fav","setState","rating","average","show","addFav","favorites","JSON","parse","localStorage","getItem","item","index","splice","setItem","stringify","detailed","person","dID","props","history","componentDidMount","render","err","message","styles","div","hContainer","headerRow","h1","h2","length","card","display","backgroundSize","width","hieght","fontFamily","color","section","header","fontSize","justifyContent","alignItems","headerCol","marginTop","searchCol","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BK,KAD8B,GACtB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE,KAHJ;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,KAAK,EAAE,KALD,CAQR;;AARQ,KADsB;;AAAA,SAgB9BC,SAhB8B,GAgBjBC,KAAD,IAAW;AACrB,YAAMC,MAAM,GAAG,EAAf;AACA,YAAMC,MAAM,GAAG,EAAf,CAFqB,CAGrB;;AACAF,MAAAA,KAAK,CAACG,OAAN,CAAeC,IAAD,IAAU;AACtB,YAAIA,IAAI,CAACN,KAAL,KAAe,IAAnB,EAAyB;AACvBG,UAAAA,MAAM,CAACI,IAAP,CAAYD,IAAZ;AACD,SAFD,MAEO;AACLF,UAAAA,MAAM,CAACG,IAAP,CAAYD,IAAZ;AACD;AACF,OAND;AAOAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,IAAD,IAAU;AACvBI,QAAAA,KAAK,yCAAkCJ,IAAI,CAACK,EAAvC,wBAAL,CACGC,IADH,CACSN,IAAD,IAAU;AACd,gBAAMO,MAAM,GAAGP,IAAI,CAACQ,IAAL,EAAf;AACA,iBAAOD,MAAP;AACD,SAJH,EAIKD,IAJL,CAIWG,KAAD,IAAW;AACjB;AACA,gBAAMC,KAAK,GAAG,EAAd;AACAA,UAAAA,KAAK,CAACT,IAAN,CAAWQ,KAAX,EAHiB,CAIjB;;AACAC,UAAAA,KAAK,CAACX,OAAN,CAAeC,IAAD,IAAU;AACtB,gBAAIA,IAAI,CAACW,KAAL,IAAc,IAAlB,EAAwB;AACtBX,cAAAA,IAAI,CAACW,KAAL,GAAa;AAAEC,gBAAAA,MAAM,YAAKzB,MAAL,CAAR;AAAuB0B,gBAAAA,KAAK,EAAE;AAA9B,eAAb;AACD;AACF,WAJD,EALiB,CAUjB;;AACA,gBAAMC,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAUC,KAAK,KAAK;AACjCX,YAAAA,EAAE,YAAKW,KAAK,CAACX,EAAX,CAD+B;AAEjCY,YAAAA,IAAI,YAAKD,KAAK,CAACC,IAAX,CAF6B;AAGjCC,YAAAA,QAAQ,YAAKF,KAAK,CAACE,QAAX,CAHyB;AAIjCP,YAAAA,KAAK,YAAKK,KAAK,CAACL,KAAN,CAAYC,MAAjB,CAJ4B;AAKjCO,YAAAA,GAAG,EAAE;AAL4B,WAAL,CAAf,CAAf;AAQA,iBAAOL,MAAP;AACD,SAxBH,EAwBKR,IAxBL,CAwBWG,KAAD,IAAW;AACjBP,UAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAAC,CAAD,CAAjB;AACA,eAAKW,QAAL,CAAc/B,KAAK,KAAK;AAAEC,YAAAA,MAAM,EAAE,CAAC,GAAGD,KAAK,CAACC,MAAV,EAAkBmB,KAAK,CAAC,CAAD,CAAvB;AAAV,WAAL,CAAnB;AACD,SA3BH;AA4BD,OA7BD;AA+BAX,MAAAA,MAAM,CAACC,OAAP,CAAgBC,IAAD,IAAU;AACvBI,QAAAA,KAAK,yCAAkCJ,IAAI,CAACK,EAAvC,EAAL,CACGC,IADH,CACSN,IAAD,IAAU;AACd,gBAAMO,MAAM,GAAGP,IAAI,CAACQ,IAAL,EAAf;AACA,iBAAOD,MAAP;AACD,SAJH,EAIKD,IAJL,CAIWG,KAAD,IAAW;AACjB;AACA,gBAAMC,KAAK,GAAG,EAAd;AACAA,UAAAA,KAAK,CAACT,IAAN,CAAWQ,KAAX,EAHiB,CAIjB;;AACAC,UAAAA,KAAK,CAACX,OAAN,CAAeC,IAAD,IAAU;AACtB,gBAAIA,IAAI,CAACW,KAAL,IAAc,IAAd,IAAsBX,IAAI,CAACqB,MAAL,CAAYC,OAAZ,IAAuB,IAAjD,EAAuD;AACrDtB,cAAAA,IAAI,CAACW,KAAL,GAAa;AAAEC,gBAAAA,MAAM,YAAKzB,MAAL,CAAR;AAAuB0B,gBAAAA,KAAK,EAAE;AAA9B,eAAb;AACAb,cAAAA,IAAI,CAACqB,MAAL,GAAc;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAd;AACD;AACF,WALD,EALiB,CAWjB;;AACA,gBAAMxB,MAAM,GAAGY,KAAK,CAACK,GAAN,CAAUQ,IAAI,KAAK;AAChClB,YAAAA,EAAE,YAAKkB,IAAI,CAAClB,EAAV,CAD8B;AAEhCY,YAAAA,IAAI,YAAKM,IAAI,CAACN,IAAV,CAF4B;AAGhCI,YAAAA,MAAM,YAAKE,IAAI,CAACL,QAAV,CAH0B;AAIhCP,YAAAA,KAAK,YAAKY,IAAI,CAACZ,KAAL,CAAWC,MAAhB,CAJ2B;AAKhCO,YAAAA,GAAG,EAAE;AAL2B,WAAL,CAAd,CAAf;AAOA,iBAAOrB,MAAP;AACD,SAxBH,EAwBKQ,IAxBL,CAwBWG,KAAD,IAAW;AACjB,eAAKW,QAAL,CAAc/B,KAAK,KAAK;AAAEE,YAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBkB,KAAK,CAAC,CAAD,CAAtB;AAAT,WAAL,CAAnB;AACD,SA1BH;AA2BD,OA5BD;AA6BA,WAAKW,QAAL,CAAc;AAAE5B,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAzF6B;;AAAA,SA2F5BgC,MA3F4B,GA2FlBnB,EAAD,IAAQ;AACf,YAAMoB,SAAS,GAAG,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAJ,CAAlB;AACA,YAAMvC,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf;AACA,YAAMC,KAAK,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,KAAf,CAAd;AACAkC,MAAAA,SAAS,CAAC1B,OAAV,CAAkB,CAAC+B,IAAD,EAAOC,KAAP,KAAiB;AACjC,YAAID,IAAI,CAACzB,EAAL,KAAYA,EAAhB,EAAoB;AAClBH,UAAAA,OAAO,CAACC,GAAR,CAAY2B,IAAI,CAACzB,EAAjB;AACAoB,UAAAA,SAAS,CAACO,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;AACD;AACF,OALD;AAMAzC,MAAAA,MAAM,CAACS,OAAP,CAAe,CAAC+B,IAAD,EAAOC,KAAP,KAAiB;AAC9B,YAAID,IAAI,CAACzB,EAAL,KAAYA,EAAhB,EAAoB;AAClBH,UAAAA,OAAO,CAACC,GAAR,CAAY2B,IAAI,CAACzB,EAAjB;AACAf,UAAAA,MAAM,CAAC0C,MAAP,CAAcD,KAAd,EAAqB,CAArB;AACD;AACF,OALD;AAOAxC,MAAAA,KAAK,CAACQ,OAAN,CAAc,CAAC+B,IAAD,EAAOC,KAAP,KAAiB;AAC7B,YAAID,IAAI,CAACzB,EAAL,KAAYA,EAAhB,EAAoB;AAClBH,UAAAA,OAAO,CAACC,GAAR,CAAY2B,IAAI,CAACzB,EAAjB;AACAd,UAAAA,KAAK,CAACyC,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACD;AACF,OALD;AAMAH,MAAAA,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCP,IAAI,CAACQ,SAAL,CAAeT,SAAf,CAAlC;AACA,WAAKL,QAAL,CAAc;AAAE9B,QAAAA;AAAF,OAAd;AACA,WAAK8B,QAAL,CAAc;AAAE7B,QAAAA;AAAF,OAAd,EAzBe,CA0Bf;AACA;AACD,KAvH2B;;AAAA,SA0H5B4C,QA1H4B,GA0HjB,CAAC9B,EAAD,EAAK+B,MAAL,KAAgB;AACzB,YAAMC,GAAG,GAAG;AAAEA,QAAAA,GAAG,EAAEhC,EAAP;AAAWX,QAAAA,KAAK,EAAE0C;AAAlB,OAAZ;AACAR,MAAAA,YAAY,CAACK,OAAb,CAAqB,aAArB,EAAoCP,IAAI,CAACQ,SAAL,CAAeG,GAAf,CAApC;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBtC,IAAnB,CAAwB,cAAxB;AACD,KA9H2B;AAAA;;AAU9BuC,EAAAA,iBAAiB,GAAG;AAClB,UAAMf,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD,EAAnE;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAYsB,SAAZ;AACA,SAAK9B,SAAL,CAAe8B,SAAf;AACD;;AAkHCgB,EAAAA,MAAM,GAAG;AAAA,wBAGH,KAAKpD,KAHF;AAAA,UAELqD,GAFK,eAELA,GAFK;AAAA,UAEAlD,QAFA,eAEAA,QAFA;AAAA,UAEUF,MAFV,eAEUA,MAFV;AAAA,UAEkBC,KAFlB,eAEkBA,KAFlB;;AAIP,QAAImD,GAAJ,EAAS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEGA,GAAG,CAACC,OAFP,CADF;AAMD;;AAAC,QAAI,CAACnD,QAAL,EAAe;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WACE;AAAK,MAAA,KAAK,EAAEoD,MAAM,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAED,MAAM,CAACE,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAiD,MAAA,KAAK,EAAEF,MAAM,CAACG,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAEH,MAAM,CAACI,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAFF,EAQE;AAAI,MAAA,KAAK,EAAEJ,MAAM,CAACK,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGzD,QAAQ,IAAIF,MAAM,CAAC4D,MAAP,GAAgB,CAA5B,GAAgC5D,MAAM,CAACyB,GAAP,CAAYC,KAAD,IAAW;AAAA,YAEnDX,EAFmD,GAGjDW,KAHiD,CAEnDX,EAFmD;AAAA,YAE/CY,IAF+C,GAGjDD,KAHiD,CAE/CC,IAF+C;AAAA,YAEzCC,QAFyC,GAGjDF,KAHiD,CAEzCE,QAFyC;AAAA,YAE/BP,KAF+B,GAGjDK,KAHiD,CAE/BL,KAF+B;AAAA,YAExBQ,GAFwB,GAGjDH,KAHiD,CAExBG,GAFwB,EAInD;;AACF,YAAMiB,MAAM,GAAG,IAAf,CALqD,CAMrD;;AACA,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEQ,MAAM,CAACO,IADhB;AAEE,QAAA,GAAG,EAAE9C,EAFP;AAGE,QAAA,GAAG,YAAKY,IAAL,aAHL;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,KAAK,EAAEP,KALT;AAME,QAAA,KAAK,EAAEM,IANT;AAOE,QAAA,GAAG,EAAEE,GAPP;AAQE,QAAA,MAAM,EAAE,MAAM,KAAKK,MAAL,CAAYnB,EAAZ,EAAgB+B,MAAhB,CARhB;AASE,QAAA,QAAQ,EAAE,MAAM,KAAKD,QAAL,CAAc9B,EAAd,EAAkB+B,MAAlB,CATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD,KApBgC,CAAhC,GAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAtBP,CADF,CATF,EAoCE;AAAI,MAAA,KAAK,EAAEQ,MAAM,CAACK,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApCF,EAqCE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGzD,QAAQ,IAAID,KAAK,CAAC2D,MAAN,GAAe,CAA3B,GAA+B3D,KAAK,CAACwB,GAAN,CAAWQ,IAAD,IAAU;AAAA,YAEhDlB,EAFgD,GAG9CkB,IAH8C,CAEhDlB,EAFgD;AAAA,YAE5CY,IAF4C,GAG9CM,IAH8C,CAE5CN,IAF4C;AAAA,YAEtCI,MAFsC,GAG9CE,IAH8C,CAEtCF,MAFsC;AAAA,YAE9BV,KAF8B,GAG9CY,IAH8C,CAE9BZ,KAF8B;AAAA,YAEvBQ,GAFuB,GAG9CI,IAH8C,CAEvBJ,GAFuB;AAIlD,YAAMiB,MAAM,GAAG,KAAf;AACA,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEQ,MAAM,CAACO,IADhB;AAEE,QAAA,GAAG,EAAE9C,EAFP;AAGE,QAAA,GAAG,YAAKY,IAAL,aAHL;AAIE,QAAA,MAAM,oBAAaI,MAAb,CAJR;AAKE,QAAA,KAAK,EAAEV,KALT;AAME,QAAA,KAAK,EAAEM,IANT;AAOE,QAAA,GAAG,EAAEE,GAPP;AAQE,QAAA,MAAM,EAAE,MAAM,KAAKK,MAAL,CAAYnB,EAAZ,EAAgB+B,MAAhB,CARhB;AASE,QAAA,QAAQ,EAAE,MAAM,KAAKD,QAAL,CAAc9B,EAAd,EAAkB+B,MAAlB,CATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD,KAlB+B,CAA/B,GAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CApBP,CADF,CArCF,CADF;AAiED;;AA/M2B;;AAkNlC,eAAehD,SAAf;AACA,MAAMwD,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AAEHO,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,cAAc,EAAE,MAHb;AAIHC,IAAAA,KAAK,EAAE,MAJJ;AAKHC,IAAAA,MAAM,EAAE,MALL;AAMHC,IAAAA,UAAU,EAAE,yBANT;AAOHC,IAAAA,KAAK,EAAE;AAPJ,GADQ;AAWbC,EAAAA,OAAO,EAAE;AACPN,IAAAA,OAAO,EAAE;AADF,GAXI;AAcbD,EAAAA,IAAI,EAAE;AACJK,IAAAA,UAAU,EAAE,yBADR;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAdO;AAmBbE,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,MADJ;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAnBK;AAwBbC,EAAAA,SAAS,EAAE;AACTF,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTE,IAAAA,SAAS,EAAE;AAHF,GAxBE;AA6BbC,EAAAA,SAAS,EAAE;AACTD,IAAAA,SAAS,EAAE;AADF,GA7BE;AAgCbf,EAAAA,EAAE,EAAE;AACFW,IAAAA,QAAQ,EAAE,MADR;AAEFI,IAAAA,SAAS,EAAE,OAFT;AAGFE,IAAAA,UAAU,EAAE;AAHV,GAhCS;AAsCbpB,EAAAA,UAAU,EAAE;AACVQ,IAAAA,KAAK,EAAE,MADG;AAEVU,IAAAA,SAAS,EAAE;AAFD,GAtCC;AA0CbhB,EAAAA,EAAE,EAAE;AACFY,IAAAA,QAAQ,EAAE;AADR;AA1CS,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\n\nclass Favorites extends Component {\n    state = {\n      actors: [],\n      shows: [],\n      isLoaded: false,\n      search: '',\n      human: false,\n    }\n\n    // load favorites\n    componentDidMount() {\n      const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n      console.log(favorites);\n      this.fetchData(favorites);\n    }\n\n    fetchData = (query) => {\n      const hArray = [];\n      const sArray = [];\n      // split between actor and show\n      query.forEach((data) => {\n        if (data.human === true) {\n          hArray.push(data);\n        } else {\n          sArray.push(data);\n        }\n      });\n      console.log(hArray);\n      hArray.forEach((data) => {\n        fetch(`https://api.tvmaze.com/people/${data.id}?embed=castcredits`)\n          .then((data) => {\n            const output = data.json();\n            return output;\n          }).then((stuff) => {\n            // push object to array\n            const data1 = [];\n            data1.push(stuff);\n            // check for null, add data\n            data1.forEach((data) => {\n              if (data.image == null) {\n                data.image = { medium: `${defPic}`, large: './images/hikers.jpg' };\n              }\n            });\n            // make actor objects\n            const bArray = data1.map(actor => ({\n              id: `${actor.id}`,\n              name: `${actor.name}`,\n              birthday: `${actor.birthday}`,\n              image: `${actor.image.medium}`,\n              fav: true,\n            }));\n\n            return bArray;\n          }).then((stuff) => {\n            console.log(stuff[0]);\n            this.setState(state => ({ actors: [...state.actors, stuff[0]] }));\n          });\n      });\n\n      sArray.forEach((data) => {\n        fetch(` https://api.tvmaze.com/shows/${data.id}`)\n          .then((data) => {\n            const output = data.json();\n            return output;\n          }).then((stuff) => {\n            // push object to array\n            const data1 = [];\n            data1.push(stuff);\n            // check for null, add data\n            data1.forEach((data) => {\n              if (data.image == null || data.rating.average == null) {\n                data.image = { medium: `${defPic}`, large: './images/hikers.jpg' };\n                data.rating = { average: 'N/A' };\n              }\n            });\n            // make show object\n            const sArray = data1.map(show => ({\n              id: `${show.id}`,\n              name: `${show.name}`,\n              rating: `${show.birthday}`,\n              image: `${show.image.medium}`,\n              fav: true,\n            }));\n            return sArray;\n          }).then((stuff) => {\n            this.setState(state => ({ shows: [...state.shows, stuff[0]] }));\n          });\n      });\n      this.setState({ isLoaded: true });\n    }\n\n      addFav = (id) => {\n        const favorites = [...JSON.parse(localStorage.getItem('favorites'))];\n        const actors = [...this.state.actors];\n        const shows = [...this.state.shows];\n        favorites.forEach((item, index) => {\n          if (item.id === id) {\n            console.log(item.id);\n            favorites.splice(index, 1);\n          }\n        });\n        actors.forEach((item, index) => {\n          if (item.id === id) {\n            console.log(item.id);\n            actors.splice(index, 1);\n          }\n        });\n\n        shows.forEach((item, index) => {\n          if (item.id === id) {\n            console.log(item.id);\n            shows.splice(index, 1);\n          }\n        });\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n        this.setState({ actors });\n        this.setState({ shows });\n        // resest actors here to refresh without refreshing page\n        // window.location.reload();\n      }\n\n      // load to description page, set local storage to pass id\n      detailed = (id, person) => {\n        const dID = { dID: id, human: person };\n        localStorage.setItem('description', JSON.stringify(dID));\n        this.props.history.push('/Description');\n      }\n\n      render() {\n        const {\n          err, isLoaded, actors, shows,\n        } = this.state;\n        if (err) {\n          return (\n            <div>\nError:\n              {err.message}\n            </div>\n          );\n        } if (!isLoaded) {\n          return <div>Loading...</div>;\n        }\n        return (\n          <div style={styles.div}>\n            <Header />\n            <div className=\"container\" style={styles.hContainer}>\n              <div className=\"row mt-5 justify-content-center\" style={styles.headerRow}>\n                <h1 className=\"col-6\" style={styles.h1}>Favorites</h1>\n              </div>\n\n            </div>\n            <h2 style={styles.h2}>People</h2>\n            <section className=\"container\">\n              <div className=\"row\">\n\n                {isLoaded && actors.length > 0 ? actors.map((actor) => {\n                  const {\n                    id, name, birthday, image, fav,\n                  } = actor;\n                    // set person to true\n                  const person = true;\n                  // load cards and insert dynamic data\n                  return (\n                    <Card\n                      style={styles.card}\n                      key={id}\n                      alt={`${name} picture`}\n                      birthday={birthday}\n                      image={image}\n                      title={name}\n                      fav={fav}\n                      addFav={() => this.addFav(id, person)}\n                      detailed={() => this.detailed(id, person)}\n                    />\n                  );\n                }) : <h2>You haven't favorited anyone yet!</h2>\n                  }\n              </div>\n            </section>\n            <h2 style={styles.h2}>Shows</h2>\n            <section className=\"container\">\n              <div className=\"row\">\n\n                {isLoaded && shows.length > 0 ? shows.map((show) => {\n                  const {\n                    id, name, rating, image, fav,\n                  } = show;\n                  const person = false;\n                  return (\n                    <Card\n                      style={styles.card}\n                      key={id}\n                      alt={`${name} picture`}\n                      rating={`Rating: ${rating}`}\n                      image={image}\n                      title={name}\n                      fav={fav}\n                      addFav={() => this.addFav(id, person)}\n                      detailed={() => this.detailed(id, person)}\n                    />\n                  );\n                }) : <h2>You haven't favorited any shows yet!</h2>\n                }\n              </div>\n            </section>\n          </div>\n        );\n      }\n}\n\nexport default Favorites;\nconst styles = {\n  div: {\n\n    display: 'grid',\n    backgroundSize: '100%',\n    width: '100%',\n    hieght: '100%',\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780',\n\n  },\n  section: {\n    display: 'grid',\n  },\n  card: {\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780',\n\n  },\n  header: {\n    fontSize: '84px',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerCol: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '3rem',\n  },\n  searchCol: {\n    marginTop: '1rem',\n  },\n  h2: {\n    fontSize: '64px',\n    marginTop: '10rem',\n    marginLeft: '15rem',\n\n  },\n  hContainer: {\n    width: '100%',\n    marginTop: '5rem',\n  },\n  h1: {\n    fontSize: '64px',\n  },\n\n};\n"]},"metadata":{},"sourceType":"module"}