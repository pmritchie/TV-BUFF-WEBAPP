{"ast":null,"code":"import _slicedToArray from \"/Users/mikey/Documents/WDD359/tv-buff/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mikey/Documents/WDD359/tv-buff/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/search/Search.js';\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      err: null,\n      isLoaded: false,\n      // actors and shows need to be made into objects\n      actors: {},\n      shows: {},\n      search: '',\n      favList: [],\n      dID: ''\n    };\n\n    this.search = (e, v) => {\n      console.log(v);\n      e.preventDefault(); // change v to array and split where spaces then at +\n\n      localStorage.setItem('search', JSON.stringify(v));\n      this.fetchData(v);\n    };\n\n    this.addFav = (id, person) => {\n      const favList = [...this.state.favList];\n      const storage = [...JSON.parse(localStorage.getItem('favorites'))];\n      const actors = [...this.state.actors];\n      const shows = [...this.state.shows]; // check state favList for items, if empty set localStorage and favList\n\n      if (favList.length <= 1) {\n        favList.push({\n          id,\n          human: person,\n          fav: true\n        });\n        this.setState({\n          favList\n        });\n        storage.push({\n          id,\n          human: person,\n          fav: true\n        });\n      } else {\n        // check and see if it already exist if not add\n        const idCheck = favList.some(el => el.id === id);\n\n        if (idCheck === true) {\n          favList.forEach((item, index) => {\n            if (item.id === id) {\n              favList.splice(index, 1);\n            }\n          });\n        } else {\n          favList.push({\n            id,\n            human: person,\n            fav: true\n          });\n        } // check and see if it already exists if not add\n\n\n        const idShow = storage.some(el => el.id === id);\n\n        if (idShow === true) {\n          storage.forEach((item, index) => {\n            if (item.id === id) {\n              storage.splice(index, 1);\n            }\n          });\n        } else {\n          storage.push({\n            id,\n            human: person,\n            fav: true\n          });\n        }\n      } // these two check to if the heart is lit or not\n\n\n      actors.forEach((item, index) => {\n        if (item.id === id) {\n          if (item.fav === true) {\n            actors[index].fav = false;\n          } else {\n            actors[index].fav = true;\n          }\n        }\n      });\n      shows.forEach((item, index) => {\n        if (item.id === id) {\n          if (item.fav === true) {\n            shows[index].fav = false;\n          } else {\n            shows[index].fav = true;\n          }\n        }\n      });\n      this.setState({\n        favList,\n        shows,\n        actors\n      });\n      localStorage.setItem('favorites', JSON.stringify(storage));\n    };\n\n    this.detailed = (id, person) => {\n      const dID = {\n        dID: id,\n        human: person\n      };\n      localStorage.setItem('description', JSON.stringify(dID));\n      this.props.history.push('/Description');\n    };\n  }\n\n  componentDidMount() {\n    // load data from localStorage here\n    const storage = JSON.parse(localStorage.getItem('favorites'));\n    const search = JSON.parse(localStorage.getItem('search')); // checking if something has been searched, if it has load that info, if not, load from hardcode\n\n    if (search === null) {\n      if (storage === null) {\n        this.setState({\n          favList: [{\n            id: null,\n            fav: false,\n            human: false\n          }]\n        });\n        localStorage.setItem('favorites', JSON.stringify([{\n          id: null,\n          fav: false,\n          human: false\n        }]));\n      } else {\n        this.setState({\n          favList: storage\n        });\n      }\n\n      this.fetchData('Tom');\n    } else {\n      if (storage === null) {\n        this.setState({\n          favList: [{\n            id: null,\n            fav: false,\n            human: false\n          }]\n        });\n        localStorage.setItem('favorites', JSON.stringify([{\n          id: null,\n          fav: false,\n          human: false\n        }]));\n      } else {\n        this.setState({\n          favList: storage\n        });\n      }\n\n      this.fetchData(search);\n    }\n\n    console.log(this.state.favList);\n  }\n\n  fetchData(query) {\n    // fetch data twice, once for shows the other for actors\n    Promise.all([fetch(\"https://api.tvmaze.com/search/people?q=:\".concat(query), {\n      method: 'get'\n    }), fetch(\"https://api.tvmaze.com/search/shows?q=:\".concat(query), {\n      method: 'get'\n    })]).then(([prom1, prom2]) => {\n      // convert into json\n      const output = Promise.all([prom1.json(), prom2.json()]);\n      return output;\n    }).then(stuff => {\n      const _stuff = _slicedToArray(stuff, 2),\n            data1 = _stuff[0],\n            data2 = _stuff[1]; // loop through data to check for null value's replace with value\n\n\n      data1.forEach(data => {\n        if (data.person.image === null) {\n          data.person.image = {\n            medium: \"\".concat(defPic),\n            large: './images/hikers.jpg'\n          };\n        }\n      });\n      data2.forEach(data => {\n        if (data.show.image === null) {\n          data.show.image = {\n            medium: \"\".concat(defPic),\n            large: './images/hikers.jpg'\n          };\n          data.show.rating = {\n            average: 'N/A'\n          };\n        }\n      });\n      data2.forEach(data => {\n        if (data.show.rating.average === null) {\n          data.show.rating = {\n            average: 'N/A'\n          };\n        }\n      }); // create array of objects\n\n      const pArray = data1.map(actor => ({\n        id: \"\".concat(actor.person.id),\n        name: \"\".concat(actor.person.name),\n        birthday: \"\".concat(actor.person.birthday),\n        image: \"\".concat(actor.person.image.medium),\n        fav: false\n      }));\n      const sArray = data2.map(show => ({\n        id: \"\".concat(show.show.id),\n        name: \"\".concat(show.show.name),\n        rating: \"\".concat(show.show.rating.average),\n        image: \"\".concat(show.show.image.medium),\n        fav: false\n      })); // check to see if the heart needs to be red or not\n\n      for (let i = 0; i < sArray.length; i++) {\n        const tempA = [...this.state.favList];\n        const check = sArray[i].id;\n\n        for (let v = 0; v < tempA.length; v++) {\n          if (check === tempA[v].id) {\n            sArray[i].fav = true;\n          }\n        }\n      }\n\n      for (let i = 0; i < pArray.length; i++) {\n        const tempA = [...this.state.favList];\n        const check = pArray[i].id;\n\n        for (let v = 0; v < tempA.length; v++) {\n          if (check === tempA[v].id) {\n            pArray[i].fav = true;\n          }\n        }\n      }\n\n      return [pArray, sArray];\n    }).then(([actors, shows]) => this.setState({\n      actors,\n      shows,\n      isLoaded: true\n    }));\n  } // function to add favorites to local storage\n\n\n  render() {\n    const _this$state = this.state,\n          err = _this$state.err,\n          isLoaded = _this$state.isLoaded,\n          actors = _this$state.actors,\n          shows = _this$state.shows,\n          favList = _this$state.favList;\n    console.log(shows);\n\n    if (err) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Error:\", err.message);\n    }\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      style: styles.div,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      style: styles.headerCol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"TV BUFF!\")), React.createElement(\"div\", {\n      className: \"col\",\n      style: styles.searchCol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Search, {\n      search: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })))), React.createElement(\"h2\", {\n      style: styles.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"People\"), React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, isLoaded && actors.length > 0 ? actors.map(actor => {\n      const id = actor.id,\n            name = actor.name,\n            birthday = actor.birthday,\n            image = actor.image,\n            fav = actor.fav;\n      const person = true;\n      return React.createElement(Card, {\n        style: styles.card,\n        key: id,\n        alt: \"\".concat(name, \" picture\"),\n        birthday: birthday,\n        image: image,\n        title: name,\n        fav: fav,\n        addFav: e => this.addFav(id, person, e),\n        detailed: () => this.detailed(id, person),\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      });\n    }) : null)), React.createElement(\"h2\", {\n      style: styles.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Shows\"), React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, isLoaded && shows.length > 0 ? shows.map(show => {\n      const id = show.id,\n            name = show.name,\n            rating = show.rating,\n            image = show.image,\n            fav = show.fav;\n      const person = false;\n      favList.forEach(item => {\n        if (item.id === id) {}\n      });\n      return React.createElement(Card, {\n        style: styles.card,\n        key: id,\n        alt: \"\".concat(name, \" picture\"),\n        rating: \"Rating: \".concat(rating),\n        image: image,\n        title: name,\n        id: id,\n        fav: fav,\n        addFav: () => this.addFav(id, person),\n        detailed: () => this.detailed(id, person),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      });\n    }) : null))));\n  }\n\n}\n\nexport default Home;\nconst styles = {\n  div: {\n    display: 'grid',\n    backgroundSize: '100%',\n    width: '100%',\n    hieght: '100%',\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780'\n  },\n  section: {\n    display: 'grid'\n  },\n  card: {\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780'\n  },\n  header: {\n    fontSize: '84px',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerCol: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '3rem'\n  },\n  searchCol: {\n    marginTop: '1rem'\n  },\n  h2: {\n    fontSize: '64px',\n    marginTop: '10rem',\n    marginLeft: '15rem'\n  }\n};","map":{"version":3,"sources":["/Users/mikey/Documents/WDD359/tv-buff/src/pages/Home.js"],"names":["React","Component","Search","Header","Card","defPic","Home","state","err","isLoaded","actors","shows","search","favList","dID","e","v","console","log","preventDefault","localStorage","setItem","JSON","stringify","fetchData","addFav","id","person","storage","parse","getItem","length","push","human","fav","setState","idCheck","some","el","forEach","item","index","splice","idShow","detailed","props","history","componentDidMount","query","Promise","all","fetch","method","then","prom1","prom2","output","json","stuff","data1","data2","data","image","medium","large","show","rating","average","pArray","map","actor","name","birthday","sArray","i","tempA","check","render","message","styles","div","headerCol","header","searchCol","h2","card","display","backgroundSize","width","hieght","fontFamily","color","section","fontSize","justifyContent","alignItems","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Search from '../components/search/Search.js';\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\n\n\nclass Home extends Component {\n  state = {\n    err: null,\n    isLoaded: false,\n    // actors and shows need to be made into objects\n    actors: {},\n    shows: {},\n    search: '',\n    favList: [],\n    dID: '',\n  };\n\nsearch = (e, v) => {\n  console.log(v);\n  e.preventDefault();\n  // change v to array and split where spaces then at +\n  localStorage.setItem('search', JSON.stringify(v));\n  this.fetchData(v);\n}\n\ncomponentDidMount() {\n  // load data from localStorage here\n  const storage = JSON.parse(localStorage.getItem('favorites'));\n  const search = JSON.parse(localStorage.getItem('search'));\n\n  // checking if something has been searched, if it has load that info, if not, load from hardcode\n  if (search === null) {\n    if (storage === null) {\n      this.setState({ favList: [{ id: null, fav: false, human: false }] });\n      localStorage.setItem('favorites', JSON.stringify([{ id: null, fav: false, human: false }]));\n    } else {\n      this.setState({ favList: storage });\n    }\n    this.fetchData('Tom');\n  } else {\n    if (storage === null) {\n      this.setState({ favList: [{ id: null, fav: false, human: false }] });\n      localStorage.setItem('favorites', JSON.stringify([{ id: null, fav: false, human: false }]));\n    } else {\n      this.setState({ favList: storage });\n    }\n    this.fetchData(search);\n  }\n  console.log(this.state.favList);\n}\n\nfetchData(query) {\n  // fetch data twice, once for shows the other for actors\n  Promise.all([\n    fetch(`https://api.tvmaze.com/search/people?q=:${query}`, { method: 'get' }),\n    fetch(`https://api.tvmaze.com/search/shows?q=:${query}`, { method: 'get' }),\n  ])\n    .then(([prom1, prom2]) => {\n    // convert into json\n      const output = Promise.all([prom1.json(), prom2.json()]);\n      return output;\n    })\n    .then(\n      (stuff) => {\n        const [data1, data2] = stuff;\n        // loop through data to check for null value's replace with value\n        data1.forEach((data) => {\n          if (data.person.image === null) {\n            data.person.image = { medium: `${defPic}`, large: './images/hikers.jpg' };\n          }\n        });\n        data2.forEach((data) => {\n          if (data.show.image === null) {\n            data.show.image = { medium: `${defPic}`, large: './images/hikers.jpg' };\n            data.show.rating = { average: 'N/A' };\n          }\n        });\n        data2.forEach((data) => {\n          if (data.show.rating.average === null) {\n            data.show.rating = { average: 'N/A' };\n          }\n        });\n\n        // create array of objects\n        const pArray = data1.map(actor => ({\n          id: `${actor.person.id}`,\n          name: `${actor.person.name}`,\n          birthday: `${actor.person.birthday}`,\n          image: `${actor.person.image.medium}`,\n          fav: false,\n        }));\n        const sArray = data2.map(show => ({\n          id: `${show.show.id}`,\n          name: `${show.show.name}`,\n          rating: `${show.show.rating.average}`,\n          image: `${show.show.image.medium}`,\n          fav: false,\n        }));\n        // check to see if the heart needs to be red or not\n        for (let i = 0; i < sArray.length; i++) {\n          const tempA = [...this.state.favList];\n          const check = sArray[i].id;\n          for (let v = 0; v < tempA.length; v++) {\n            if (check === tempA[v].id) {\n              sArray[i].fav = true;\n            }\n          }\n        }\n        for (let i = 0; i < pArray.length; i++) {\n          const tempA = [...this.state.favList];\n          const check = pArray[i].id;\n          for (let v = 0; v < tempA.length; v++) {\n            if (check === tempA[v].id) {\n              pArray[i].fav = true;\n            }\n          }\n        }\n\n        return [pArray, sArray];\n      },\n    )\n    .then(([actors, shows]) => this.setState({\n      actors,\n      shows,\n      isLoaded: true,\n    }));\n}\n\n\n// function to add favorites to local storage\naddFav = (id, person) => {\n  const favList = [...this.state.favList];\n  const storage = [...JSON.parse(localStorage.getItem('favorites'))];\n  const actors = [...this.state.actors];\n  const shows = [...this.state.shows];\n  // check state favList for items, if empty set localStorage and favList\n  if (favList.length <= 1) {\n    favList.push({ id, human: person, fav: true });\n    this.setState({ favList });\n    storage.push({ id, human: person, fav: true });\n  } else {\n    // check and see if it already exist if not add\n    const idCheck = favList.some(el => el.id === id);\n    if (idCheck === true) {\n      favList.forEach((item, index) => {\n        if (item.id === id) {\n          favList.splice(index, 1);\n        }\n      });\n    } else {\n      favList.push({ id, human: person, fav: true });\n    }\n    // check and see if it already exists if not add\n    const idShow = storage.some(el => el.id === id);\n    if (idShow === true) {\n      storage.forEach((item, index) => {\n        if (item.id === id) {\n          storage.splice(index, 1);\n        }\n      });\n    } else {\n      storage.push({ id, human: person, fav: true });\n    }\n  }\n  // these two check to if the heart is lit or not\n  actors.forEach((item, index) => {\n    if (item.id === id) {\n      if (item.fav === true) {\n        actors[index].fav = false;\n      } else {\n        actors[index].fav = true;\n      }\n    }\n  });\n  shows.forEach((item, index) => {\n    if (item.id === id) {\n      if (item.fav === true) {\n        shows[index].fav = false;\n      } else {\n        shows[index].fav = true;\n      }\n    }\n  });\n  this.setState({ favList, shows, actors });\n  localStorage.setItem('favorites', JSON.stringify(storage));\n}\n\ndetailed = (id, person) => {\n  const dID = { dID: id, human: person };\n  localStorage.setItem('description', JSON.stringify(dID));\n  this.props.history.push('/Description');\n}\n\n\nrender() {\n  const {\n    err, isLoaded, actors, shows, favList,\n  } = this.state;\n  console.log(shows);\n  if (err) {\n    return (\n      <div>\nError:\n        {err.message}\n      </div>\n    );\n  } if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n  return (\n\n    <div style={styles.div}>\n      <Header />\n      <div className=\"body\">\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n            <div className=\"col\" style={styles.headerCol}>\n              <h1 style={styles.header}>TV BUFF!</h1>\n            </div>\n            <div className=\"col\" style={styles.searchCol}>\n              <Search search={this.search} />\n            </div>\n          </div>\n        </div>\n        <h2 style={styles.h2}>People</h2>\n        <section className=\"container\">\n          <div className=\"row\">\n\n            {isLoaded && actors.length > 0 ? actors.map((actor) => {\n              const {\n                id, name, birthday, image, fav,\n              } = actor;\n              const person = true;\n              return (\n                <Card\n                  style={styles.card}\n                  key={id}\n                  alt={`${name} picture`}\n                  birthday={birthday}\n                  image={image}\n                  title={name}\n                  fav={fav}\n                  addFav={e => this.addFav(id, person, e)}\n                  detailed={() => this.detailed(id, person)}\n                  id={id}\n                />\n              );\n            }) : null\n            }\n          </div>\n        </section>\n        <h2 style={styles.h2}>Shows</h2>\n        <section className=\"container\">\n          <div className=\"row\">\n\n            {isLoaded && shows.length > 0 ? shows.map((show) => {\n              const {\n                id, name, rating, image, fav,\n              } = show;\n              const person = false;\n              favList.forEach((item) => {\n                if (item.id === id) {\n\n                }\n              });\n\n              return (\n                <Card\n                  style={styles.card}\n                  key={id}\n                  alt={`${name} picture`}\n                  rating={`Rating: ${rating}`}\n                  image={image}\n                  title={name}\n                  id={id}\n                  fav={fav}\n                  addFav={() => this.addFav(id, person)}\n                  detailed={() => this.detailed(id, person)}\n                />\n              );\n            }) : null\n          }\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default Home;\n\nconst styles = {\n  div: {\n\n    display: 'grid',\n    backgroundSize: '100%',\n    width: '100%',\n    hieght: '100%',\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780',\n\n  },\n  section: {\n    display: 'grid',\n  },\n  card: {\n    fontFamily: \"'Freckle Face', cursive\",\n    color: '#F9D780',\n\n  },\n  header: {\n    fontSize: '84px',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerCol: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '3rem',\n  },\n  searchCol: {\n    marginTop: '1rem',\n  },\n  h2: {\n    fontSize: '64px',\n    marginTop: '10rem',\n    marginLeft: '15rem',\n  },\n\n};\n"]},"metadata":{},"sourceType":"module"}