{"ast":null,"code":"var _jsxFileName = \"/Users/mikey/Documents/WDD359/tv-buff/src/pages/Favorites.js\";\nimport React, { Component } from 'react';\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\n\nclass Favorites extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      actors: [],\n      shows: [],\n      isLoaded: false,\n      search: '',\n      human: false //load favorites\n\n    };\n\n    this.fetchData = query => {\n      let hArray = [];\n      let sArray = []; //split between actor and show\n\n      query.forEach(function (data) {\n        if (data.human === true) {\n          hArray.push(data);\n        } else {\n          sArray.push(data);\n        }\n      });\n      console.log(hArray);\n      hArray.forEach(data => {\n        fetch(\"https://api.tvmaze.com/people/\".concat(data.id, \"?embed=castcredits\")).then(data => {\n          let output = data.json();\n          return output;\n        }).then(stuff => {\n          //push object to array\n          let data1 = [];\n          data1.push(stuff); //check for null, add data\n\n          data1.forEach(data => {\n            if (data.image == null) {\n              data.image = {\n                medium: \"\".concat(defPic),\n                large: \"./images/hikers.jpg\"\n              };\n            }\n          }); //make actor objects\n\n          let bArray = data1.map(actor => ({\n            id: \"\".concat(actor.id),\n            name: \"\".concat(actor.name),\n            birthday: \"\".concat(actor.birthday),\n            image: \"\".concat(actor.image.medium),\n            fav: true\n          }));\n          return bArray;\n        }).then(stuff => {\n          console.log(stuff[0]);\n          this.setState(state => ({\n            actors: [...state.actors, stuff[0]]\n          }));\n        });\n      });\n      sArray.forEach(data => {\n        fetch(\" https://api.tvmaze.com/shows/\".concat(data.id)).then(data => {\n          let output = data.json();\n          return output;\n        }).then(stuff => {\n          //push object to array\n          let data1 = [];\n          data1.push(stuff); //check for null, add data\n\n          data1.forEach(data => {\n            if (data.image == null || data.rating.average == null) {\n              data.image = {\n                medium: \"\".concat(defPic),\n                large: \"./images/hikers.jpg\"\n              };\n              data.rating = {\n                average: \"N/A\"\n              };\n            }\n          }); //make show object\n\n          let sArray = data1.map(show => ({\n            id: \"\".concat(show.id),\n            name: \"\".concat(show.name),\n            rating: \"\".concat(show.birthday),\n            image: \"\".concat(show.image.medium),\n            fav: true\n          }));\n          return sArray;\n        }).then(stuff => {\n          this.setState(state => ({\n            shows: [...state.shows, stuff[0]]\n          }));\n        });\n      });\n      this.setState({\n        isLoaded: true\n      });\n    };\n\n    this.addFav = id => {\n      const favorites = [...JSON.parse(localStorage.getItem('favorites'))];\n      const actors = [...this.state.actors];\n      const shows = [...this.state.shows];\n      favorites.forEach(function (item, index) {\n        if (item.id === id) {\n          console.log(item.id);\n          favorites.splice(index, 1);\n        }\n      });\n      actors.forEach(function (item, index) {\n        if (item.id === id) {\n          console.log(item.id);\n          actors.splice(index, 1);\n        }\n      });\n      shows.forEach(function (item, index) {\n        if (item.id === id) {\n          console.log(item.id);\n          shows.splice(index, 1);\n        }\n      });\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      this.setState({\n        actors: actors\n      });\n      this.setState({\n        shows: shows\n      }); //resest actors here to refresh without refreshing page\n      // window.location.reload();\n    };\n\n    this.detailed = (id, person) => {\n      let dID = {\n        dID: id,\n        human: person\n      };\n      localStorage.setItem('description', JSON.stringify(dID));\n      this.props.history.push('/Description');\n    };\n  }\n\n  componentDidMount() {\n    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    console.log(favorites);\n    this.fetchData(favorites);\n  }\n\n  render() {\n    const _this$state = this.state,\n          err = _this$state.err,\n          isLoaded = _this$state.isLoaded,\n          actors = _this$state.actors,\n          shows = _this$state.shows;\n\n    if (err) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Error: \", err.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        style: styles.div,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        style: styles.hContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-5 justify-content-center\",\n        style: styles.headerRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"col-6\",\n        style: styles.h1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Favorites\"))), React.createElement(\"h2\", {\n        style: styles.h2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"People\"), React.createElement(\"section\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, isLoaded && actors.length > 0 ? actors.map(actor => {\n        const id = actor.id,\n              name = actor.name,\n              birthday = actor.birthday,\n              image = actor.image,\n              fav = actor.fav; //set person to true \n\n        const person = true; //load cards and insert dynamic data\n\n        return React.createElement(Card, {\n          style: styles.card,\n          key: id,\n          alt: name + \" picture\",\n          birthday: birthday,\n          image: image,\n          title: name,\n          fav: fav,\n          addFav: () => this.addFav(id, person),\n          detailed: () => this.detailed(id, person),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        });\n      }) : React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"You haven't favorited anyone yet!\"))), React.createElement(\"h2\", {\n        style: styles.h2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Shows\"), React.createElement(\"section\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, isLoaded && shows.length > 0 ? shows.map(show => {\n        const id = show.id,\n              name = show.name,\n              rating = show.rating,\n              image = show.image,\n              fav = show.fav;\n        const person = false;\n        return React.createElement(Card, {\n          style: styles.card,\n          key: id,\n          alt: name + \" picture\",\n          rating: \"Rating: \" + rating,\n          image: image,\n          title: name,\n          fav: fav,\n          addFav: () => this.addFav(id, person),\n          detailed: () => this.detailed(id, person),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        });\n      }) : React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"You haven't favorited any shows yet!\"))));\n    }\n  }\n\n}\n\nexport default Favorites;\nconst styles = {\n  div: {\n    display: \"grid\",\n    backgroundSize: '100%',\n    width: \"100%\",\n    hieght: \"100%\",\n    fontFamily: \"'Freckle Face', cursive\",\n    color: \"#F9D780\"\n  },\n  section: {\n    display: \"grid\"\n  },\n  card: {\n    fontFamily: \"'Freckle Face', cursive\",\n    color: \"#F9D780\"\n  },\n  header: {\n    fontSize: \"84px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headerCol: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"3rem\"\n  },\n  searchCol: {\n    marginTop: \"1rem\"\n  },\n  h2: {\n    fontSize: \"64px\",\n    marginTop: \"10rem\",\n    marginLeft: \"15rem\"\n  },\n  hContainer: {\n    width: \"100%\",\n    marginTop: \"5rem\"\n  },\n  h1: {\n    fontSize: \"64px\"\n  }\n};","map":{"version":3,"sources":["/Users/mikey/Documents/WDD359/tv-buff/src/pages/Favorites.js"],"names":["React","Component","Header","Card","defPic","Favorites","state","actors","shows","isLoaded","search","human","fetchData","query","hArray","sArray","forEach","data","push","console","log","fetch","id","then","output","json","stuff","data1","image","medium","large","bArray","map","actor","name","birthday","fav","setState","rating","average","show","addFav","favorites","JSON","parse","localStorage","getItem","item","index","splice","setItem","stringify","detailed","person","dID","props","history","componentDidMount","render","err","message","styles","div","hContainer","headerRow","h1","h2","length","card","display","backgroundSize","width","hieght","fontFamily","color","section","header","fontSize","justifyContent","alignItems","headerCol","marginTop","searchCol","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\nclass Favorites extends Component{\n    state = {\n        actors: [],\n        shows: [],\n        isLoaded: false,\n        search: '',\n        human: false\n    }\n    //load favorites\n    componentDidMount(){\n        let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        console.log(favorites)\n        this.fetchData(favorites) \n    }\n    fetchData = (query) => {\n        let hArray = []\n        let sArray = []\n        //split between actor and show\n        query.forEach(function(data){\n            if(data.human === true){\n                  hArray.push(data) \n            }else{\n                sArray.push(data)\n            }\n        })\n        console.log(hArray)\n        hArray.forEach((data) => { \n            fetch(`https://api.tvmaze.com/people/${data.id}?embed=castcredits`)\n            .then((data) => {\n                let output = data.json()\n                return output\n            }).then((stuff) => {\n             //push object to array\n                let data1 = [];\n                data1.push(stuff) \n                //check for null, add data\n                data1.forEach((data) => {\n                    if(data.image == null){\n                     data.image = {medium: `${defPic}`, large: \"./images/hikers.jpg\"}\n                    }\n                })   \n                //make actor objects\n                let bArray = data1.map(actor => ({\n                    id: `${actor.id}`,\n                    name: `${actor.name}`,\n                    birthday: `${actor.birthday}`,\n                    image: `${actor.image.medium}`,\n                    fav: true\n              })) \n              \n              return bArray;\n            }).then((stuff) => {\n              console.log(stuff[0])\n              this.setState(state =>   ( {actors: [...state.actors, stuff[0]]})  )\n            })\n        })\n\n        sArray.forEach((data)=>{\n            fetch(` https://api.tvmaze.com/shows/${data.id}`)\n            .then((data) => {\n                let output = data.json()\n                return output\n            }).then((stuff) => {\n             //push object to array\n                let data1 = [];\n                data1.push(stuff) \n            //check for null, add data\n                data1.forEach((data)=>{\n                    if(data.image == null || data.rating.average == null){\n                      data.image = {medium: `${defPic}`, large: \"./images/hikers.jpg\"}\n                      data.rating = {average: \"N/A\"}\n                    }\n                 })  \n                 //make show object\n                let sArray = data1.map(show => ({\n                    id: `${show.id}`,\n                    name: `${show.name}`,\n                    rating: `${show.birthday}`,\n                    image: `${show.image.medium}`,\n                    fav: true\n              }))   \n              return sArray;\n            }).then((stuff) => {\n              this.setState(state => ({shows: [...state.shows, stuff[0]]})) \n            })\n        })\n        this.setState({isLoaded:true})       \n      }\n\n      addFav = (id) =>{\n        const favorites = [...JSON.parse(localStorage.getItem('favorites'))];\n        const actors = [...this.state.actors]\n        const shows = [...this.state.shows]\n        favorites.forEach(function(item, index){\n          if(item.id === id){\n            console.log(item.id)\n            favorites.splice(index,1)\n            }\n        \n        })\n        actors.forEach(function(item, index){\n          if(item.id === id){\n            console.log(item.id)\n            actors.splice(index,1)\n            }\n        })\n        \n        shows.forEach(function(item, index){\n          if(item.id === id){\n            console.log(item.id)\n            shows.splice(index,1)\n            }\n        })\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n        this.setState({actors: actors});\n        this.setState({shows: shows});\n        //resest actors here to refresh without refreshing page\n        // window.location.reload();\n      }\n      //load to description page, set local storage to pass id\n      detailed = (id,person) => {\n        let dID = {dID:id, human:person}\n        localStorage.setItem('description', JSON.stringify(dID))\n        this.props.history.push('/Description')\n      }\n\n    render(){\n        const { err, isLoaded, actors, shows } = this.state;\n        if (err) {\n          return <div>Error: {err.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else { \n          return (\n            <div style={styles.div}>\n              <Header />\n              <div className=\"container\" style={styles.hContainer}>   \n              <div className=\"row mt-5 justify-content-center\" style={styles.headerRow}>\n                  <h1 className=\"col-6\" style={styles.h1} >Favorites</h1>\n              </div>\n         \n          </div>\n              <h2 style={styles.h2}>People</h2>\n              <section className=\"container\">\n                <div className=\"row\">\n                \n                  {isLoaded && actors.length > 0 ? actors.map(actor => { const {id, name, birthday, image, fav} = actor;\n                    //set person to true \n                    const person = true;\n                     //load cards and insert dynamic data\n                          return <Card \n                                  style={styles.card} \n                                  key={id} alt={name+\" picture\"} \n                                  birthday={birthday} \n                                  image={image} \n                                  title={name} \n                                  fav={fav}\n                                  addFav={()=>this.addFav(id,person)} \n                                  detailed={()=>this.detailed(id,person)}\n                            />\n                        }): <h2>You haven't favorited anyone yet!</h2>\n                  }\n                </div>\n              </section>\n              <h2 style={styles.h2}>Shows</h2>\n              <section className=\"container\">\n                <div className=\"row\">\n                \n                {isLoaded && shows.length > 0 ? shows.map(show => { const {id, name, rating, image, fav} = show;  \n                  const person = false;\n                        return <Card \n                                style={styles.card} \n                                key={id} alt={name+\" picture\"} \n                                rating={\"Rating: \"+rating} \n                                image={image} \n                                title={name}\n                                fav={fav}\n                                addFav={()=>this.addFav(id,person)}\n                                detailed={()=>this.detailed(id,person)}\n                                />\n                        }): <h2>You haven't favorited any shows yet!</h2>\n                }\n                  </div>\n              </section>\n            </div>\n          );\n        }\n    }\n}\n\nexport default Favorites;\nconst styles = {\n  div: {\n      \n    display: \"grid\",\n    backgroundSize: '100%',\n    width: \"100%\",\n    hieght: \"100%\",\n    fontFamily: \"'Freckle Face', cursive\",\n    color: \"#F9D780\",\n\n},\nsection:{\n    display: \"grid\",\n},\ncard: {\n  fontFamily: \"'Freckle Face', cursive\",\n  color: \"#F9D780\",\n    \n},\nheader:{\n  fontSize: \"84px\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n},\nheaderCol:{\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: \"3rem\"\n},\nsearchCol: {\n  marginTop: \"1rem\"\n},\nh2: {\n  fontSize: \"64px\",\n  marginTop: \"10rem\",\n  marginLeft: \"15rem\"\n\n},\nhContainer:{\n  width: \"100%\",\n  marginTop: \"5rem\",\n},\nh1: {\n  fontSize: \"64px\"\n}\n    \n  }"]},"metadata":{},"sourceType":"module"}