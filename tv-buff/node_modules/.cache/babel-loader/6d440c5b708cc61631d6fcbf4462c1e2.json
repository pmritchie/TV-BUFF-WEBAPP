{"ast":null,"code":"import _slicedToArray from \"/Users/mikey/Documents/WDD359/tv-buff/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mikey/Documents/WDD359/tv-buff/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/search/Search.js';\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      err: null,\n      isLoaded: false,\n      //actors and shows need to be made into objects\n      actors: {},\n      shows: {},\n      search: '',\n      favList: [],\n      dID: ''\n    };\n\n    this.search = (e, v) => {\n      console.log(v);\n      e.preventDefault(); //change v to array and split where spaces then at +\n\n      localStorage.setItem('search', JSON.stringify(v));\n      this.fetchData(v);\n    };\n\n    this.addFav = (id, person) => {\n      const favList = [...this.state.favList];\n      const storage = [...JSON.parse(localStorage.getItem('favorites'))];\n      const actors = [...this.state.actors];\n      const shows = [...this.state.shows]; //check state favList for items, if empty set localStorage and favList\n\n      if (favList.length <= 1) {\n        favList.push({\n          id: id,\n          human: person,\n          fav: true\n        });\n        this.setState({\n          favList\n        });\n        storage.push({\n          id: id,\n          human: person,\n          fav: true\n        });\n      } else {\n        //check and see if it already exist if not add\n        const idCheck = favList.some(el => el.id === id);\n\n        if (idCheck === true) {\n          favList.forEach(function (item, index) {\n            if (item.id === id) {\n              favList.splice(index, 1);\n            }\n          });\n        } else {\n          favList.push({\n            id: id,\n            human: person,\n            fav: true\n          });\n        } //check and see if it already exists if not add\n\n\n        const idShow = storage.some(el => el.id === id);\n\n        if (idShow === true) {\n          storage.forEach(function (item, index) {\n            if (item.id === id) {\n              storage.splice(index, 1);\n            }\n          });\n        } else {\n          storage.push({\n            id: id,\n            human: person,\n            fav: true\n          });\n        }\n      } //these two check to if the heart is lit or not\n\n\n      actors.forEach(function (item, index) {\n        if (item.id === id) {\n          if (item.fav === true) {\n            actors[index].fav = false;\n          } else {\n            actors[index].fav = true;\n          }\n        }\n      });\n      shows.forEach(function (item, index) {\n        if (item.id === id) {\n          if (item.fav === true) {\n            shows[index].fav = false;\n          } else {\n            shows[index].fav = true;\n          }\n        }\n      });\n      this.setState({\n        favList,\n        shows,\n        actors\n      });\n      localStorage.setItem('favorites', JSON.stringify(storage));\n    };\n\n    this.detailed = (id, person) => {\n      let dID = {\n        dID: id,\n        human: person\n      };\n      localStorage.setItem('description', JSON.stringify(dID));\n      this.props.history.push('/Description');\n    };\n  }\n\n  componentDidMount() {\n    //load data from localStorage here\n    const storage = JSON.parse(localStorage.getItem('favorites'));\n    const search = JSON.parse(localStorage.getItem('search')); //checking if something has been searched, if it has load that info, if not, load from hardcode\n\n    if (search === null) {\n      if (storage === null) {\n        this.setState({\n          favList: [{\n            id: null,\n            fav: false,\n            human: false\n          }]\n        });\n        localStorage.setItem('favorites', JSON.stringify([{\n          id: null,\n          fav: false,\n          human: false\n        }]));\n      } else {\n        this.setState({\n          favList: storage\n        });\n      }\n\n      this.fetchData(\"Tom\");\n    } else {\n      if (storage === null) {\n        this.setState({\n          favList: [{\n            id: null,\n            fav: false,\n            human: false\n          }]\n        });\n        localStorage.setItem('favorites', JSON.stringify([{\n          id: null,\n          fav: false,\n          human: false\n        }]));\n      } else {\n        this.setState({\n          favList: storage\n        });\n      }\n\n      this.fetchData(search);\n    }\n\n    console.log(this.state.favList);\n  }\n\n  fetchData(query) {\n    //fetch data twice, once for shows the other for actors\n    Promise.all([fetch(\"https://api.tvmaze.com/search/people?q=:\".concat(query), {\n      method: 'get'\n    }), fetch(\"https://api.tvmaze.com/search/shows?q=:\".concat(query), {\n      method: 'get'\n    })]).then(([prom1, prom2]) => {\n      //convert into json \n      let output = Promise.all([prom1.json(), prom2.json()]);\n      return output;\n    }).then(stuff => {\n      let _stuff = _slicedToArray(stuff, 2),\n          data1 = _stuff[0],\n          data2 = _stuff[1]; //loop through data to check for null value's replace with value\n\n\n      data1.forEach(function (data) {\n        if (data.person.image === null) {\n          data.person.image = {\n            medium: \"\".concat(defPic),\n            large: \"./images/hikers.jpg\"\n          };\n        }\n      });\n      data2.forEach(function (data) {\n        if (data.show.image === null) {\n          data.show.image = {\n            medium: \"\".concat(defPic),\n            large: \"./images/hikers.jpg\"\n          };\n          data.show.rating = {\n            average: \"N/A\"\n          };\n        }\n      });\n      data2.forEach(function (data) {\n        if (data.show.rating.average === null) {\n          data.show.rating = {\n            average: \"N/A\"\n          };\n        }\n      }); // create array of objects\n\n      let pArray = data1.map(actor => ({\n        id: \"\".concat(actor.person.id),\n        name: \"\".concat(actor.person.name),\n        birthday: \"\".concat(actor.person.birthday),\n        image: \"\".concat(actor.person.image.medium),\n        fav: false\n      }));\n      let sArray = data2.map(show => ({\n        id: \"\".concat(show.show.id),\n        name: \"\".concat(show.show.name),\n        rating: \"\".concat(show.show.rating.average),\n        image: \"\".concat(show.show.image.medium),\n        fav: false\n      })); //check to see if the heart needs to be red or not\n\n      for (let i = 0; i < sArray.length; i++) {\n        let tempA = [...this.state.favList];\n        let check = sArray[i].id;\n\n        for (let v = 0; v < tempA.length; v++) {\n          if (check === tempA[v].id) {\n            sArray[i].fav = true;\n          }\n        }\n      }\n\n      for (let i = 0; i < pArray.length; i++) {\n        let tempA = [...this.state.favList];\n        let check = pArray[i].id;\n\n        for (let v = 0; v < tempA.length; v++) {\n          if (check === tempA[v].id) {\n            pArray[i].fav = true;\n          }\n        }\n      }\n\n      return [pArray, sArray];\n    }).then(([actors, shows]) => this.setState({\n      actors,\n      shows,\n      isLoaded: true\n    }));\n  } //function to add favorites to local storage\n\n\n  render() {\n    const _this$state = this.state,\n          err = _this$state.err,\n          isLoaded = _this$state.isLoaded,\n          actors = _this$state.actors,\n          shows = _this$state.shows,\n          favList = _this$state.favList;\n    console.log(shows);\n\n    if (err) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Error: \", err.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        style: styles.div,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        style: styles.headerCol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"TV BUFF!\")), React.createElement(\"div\", {\n        className: \"col\",\n        style: styles.searchCol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Search, {\n        search: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })))), React.createElement(\"h2\", {\n        style: styles.h2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"People\"), React.createElement(\"section\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, isLoaded && actors.length > 0 ? actors.map(actor => {\n        const id = actor.id,\n              name = actor.name,\n              birthday = actor.birthday,\n              image = actor.image,\n              fav = actor.fav;\n        const person = true;\n        return React.createElement(Card, {\n          style: styles.card,\n          key: id,\n          alt: name + \" picture\",\n          birthday: birthday,\n          image: image,\n          title: name,\n          fav: fav,\n          addFav: e => this.addFav(id, person, e),\n          detailed: () => this.detailed(id, person),\n          id: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        });\n      }) : null)), React.createElement(\"h2\", {\n        style: styles.h2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Shows\"), React.createElement(\"section\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, isLoaded && shows.length > 0 ? shows.map(show => {\n        const id = show.id,\n              name = show.name,\n              rating = show.rating,\n              image = show.image,\n              fav = show.fav;\n        const person = false;\n        favList.forEach(function (item) {\n          if (item.id === id) {}\n        });\n        return React.createElement(Card, {\n          style: styles.card,\n          key: id,\n          alt: name + \" picture\",\n          rating: \"Rating: \" + rating,\n          image: image,\n          title: name,\n          id: id,\n          fav: fav,\n          addFav: () => this.addFav(id, person),\n          detailed: () => this.detailed(id, person),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        });\n      }) : null))));\n    }\n  }\n\n}\n\nexport default Home;\nconst styles = {\n  div: {\n    display: \"grid\",\n    backgroundSize: '100%',\n    width: \"100%\",\n    hieght: \"100%\",\n    fontFamily: \"'Freckle Face', cursive\",\n    color: \"#F9D780\"\n  },\n  section: {\n    display: \"grid\"\n  },\n  card: {\n    fontFamily: \"'Freckle Face', cursive\",\n    color: \"#F9D780\"\n  },\n  header: {\n    fontSize: \"84px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headerCol: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"3rem\"\n  },\n  searchCol: {\n    marginTop: \"1rem\"\n  },\n  h2: {\n    fontSize: \"64px\",\n    marginTop: \"10rem\",\n    marginLeft: \"15rem\"\n  }\n};","map":{"version":3,"sources":["/Users/mikey/Documents/WDD359/tv-buff/src/pages/Home.js"],"names":["React","Component","Search","Header","Card","defPic","Home","state","err","isLoaded","actors","shows","search","favList","dID","e","v","console","log","preventDefault","localStorage","setItem","JSON","stringify","fetchData","addFav","id","person","storage","parse","getItem","length","push","human","fav","setState","idCheck","some","el","forEach","item","index","splice","idShow","detailed","props","history","componentDidMount","query","Promise","all","fetch","method","then","prom1","prom2","output","json","stuff","data1","data2","data","image","medium","large","show","rating","average","pArray","map","actor","name","birthday","sArray","i","tempA","check","render","message","styles","div","headerCol","header","searchCol","h2","card","display","backgroundSize","width","hieght","fontFamily","color","section","fontSize","justifyContent","alignItems","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Search from '../components/search/Search.js';\nimport Header from '../components/header/Header.js';\nimport Card from '../components/card/Card';\nimport defPic from '../components/images/default.jpeg';\n\n\n\nclass Home extends Component{\n  state = {\n    err: null,\n    isLoaded: false,\n    //actors and shows need to be made into objects\n    actors: {},\n    shows: {},\n    search: '',\n    favList: [],\n    dID: '',\n  };\n  \nsearch = (e,v) => {\n  console.log(v)\n  e.preventDefault();\n  //change v to array and split where spaces then at +\n  localStorage.setItem('search', JSON.stringify(v))\n  this.fetchData(v);\n}\n\ncomponentDidMount() {\n  \n  //load data from localStorage here\n  const storage = JSON.parse(localStorage.getItem('favorites'));\n  const search = JSON.parse(localStorage.getItem('search'));\n  \n  //checking if something has been searched, if it has load that info, if not, load from hardcode\n  if(search === null){\n      if(storage === null){\n        this.setState({favList: [{id:null, fav:false, human:false}]})\n        localStorage.setItem('favorites',JSON.stringify([{id:null, fav:false, human:false}]))\n      }else{\n        this.setState({favList: storage})\n        }\n        this.fetchData(\"Tom\")\n  }else{\n\n    if(storage === null){\n     \n      this.setState({favList: [{id:null, fav:false, human:false}]})\n      localStorage.setItem('favorites',JSON.stringify([{id:null, fav:false, human:false}]))\n    }else{\n      this.setState({favList: storage})\n    }\n    this.fetchData(search)\n  }\n  console.log(this.state.favList)\n}\n\nfetchData(query){\n  //fetch data twice, once for shows the other for actors\n  Promise.all([\n    fetch(`https://api.tvmaze.com/search/people?q=:${query}`,{method: 'get'}),\n    fetch(`https://api.tvmaze.com/search/shows?q=:${query}`,{method: 'get'})\n  ])\n  .then(([prom1, prom2]) => {\n    //convert into json \n    let output = Promise.all([prom1.json(),prom2.json()]);\n    return output;\n  })\n  .then(\n    (stuff) => {\n      let [data1,data2] = stuff;\n      //loop through data to check for null value's replace with value\n      data1.forEach(function(data){\n         if(data.person.image === null){\n           data.person.image = {medium: `${defPic}`, large: \"./images/hikers.jpg\"};\n         }\n      })\n      data2.forEach(function(data){\n        if(data.show.image === null){\n          data.show.image = {medium: `${defPic}`, large: \"./images/hikers.jpg\"};\n          data.show.rating = {average: \"N/A\"};\n        }\n     })\n     data2.forEach(function(data){\n      if(data.show.rating.average === null){\n        data.show.rating = {average: \"N/A\"};\n      }\n   })\n\n     // create array of objects\n      let pArray = data1.map(actor => ({\n        id: `${actor.person.id}`,\n        name: `${actor.person.name}`,\n        birthday: `${actor.person.birthday}`,\n       image: `${actor.person.image.medium}`,\n       fav: false\n      }));\n      let sArray = data2.map(show => ({\n        id: `${show.show.id}`,\n        name: `${show.show.name}`,\n        rating: `${show.show.rating.average}`,\n        image: `${show.show.image.medium}`,\n        fav: false\n      }));\n      //check to see if the heart needs to be red or not\n      for( let i = 0; i < sArray.length; i++ ){\n        let tempA = [...this.state.favList]\n        let check = sArray[i].id;\n        for(let v = 0; v < tempA.length; v++){\n          if(check === tempA[v].id){\n            sArray[i].fav = true;\n          }\n        }\n      }\n      for( let i = 0; i < pArray.length; i++ ){\n        let tempA = [...this.state.favList]\n        let check = pArray[i].id;\n        for(let v = 0; v < tempA.length; v++){\n          if(check === tempA[v].id){\n            pArray[i].fav = true;\n          }\n        }\n      }\n\n      return [pArray,sArray,];\n    })\n    .then(([actors,shows]) => this.setState({\n      actors,\n      shows,\n      isLoaded:true\n    }));\n}\n\n\n//function to add favorites to local storage\naddFav = (id,person) => {\n  const favList = [...this.state.favList];\n  const storage = [...JSON.parse(localStorage.getItem('favorites'))];\n  const actors = [...this.state.actors];\n  const shows = [...this.state.shows];\n  //check state favList for items, if empty set localStorage and favList\nif(favList.length <= 1){\n      favList.push({id:id,human:person,fav:true});\n      this.setState({favList});\n      storage.push({id:id,human:person,fav:true})\n}else{\n    //check and see if it already exist if not add\n    const idCheck = favList.some(el => el.id === id)\n    if(idCheck === true){\n      favList.forEach(function(item, index){\n        if(item.id === id){\n        favList.splice(index,1);\n        }\n      })\n    }else{\n      favList.push({id:id,human:person,fav:true});\n    }\n    //check and see if it already exists if not add\n    const idShow = storage.some(el => el.id === id)\n    if(idShow === true){\n      storage.forEach(function(item, index){\n        if(item.id === id){\n          storage.splice(index,1);\n        } \n      })\n    }else{\n      storage.push({id:id,human:person,fav:true})\n    }\n   \n}\n//these two check to if the heart is lit or not\n  actors.forEach(function(item, index){\n    if(item.id === id){\n      if(item.fav === true){\n        actors[index].fav = false;\n      }else{\n        actors[index].fav = true;\n      }\n      \n    } \n  })\n  shows.forEach(function(item, index){\n    if(item.id === id){\n      if(item.fav === true){\n        shows[index].fav = false;\n      }else{\n        shows[index].fav = true;\n      }  \n    } \n  })\n  this.setState({favList,shows,actors});\n  localStorage.setItem('favorites', JSON.stringify(storage));\n  \n} \ndetailed = (id,person) => {\n  let dID = {dID:id, human:person};\n  localStorage.setItem('description', JSON.stringify(dID));\n  this.props.history.push('/Description');\n}\n\n\nrender() {\n  const { err, isLoaded, actors, shows, favList } = this.state;\n  console.log(shows)\n  if (err) {\n    return <div>Error: {err.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else { \n    return (\n      \n      <div style={styles.div}>\n      <Header />\n        <div className=\"body\">\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n            <div className=\"col\" style={styles.headerCol}>\n              <h1 style={styles.header} >TV BUFF!</h1>\n            </div>\n            <div className=\"col\" style={styles.searchCol} >\n              <Search search={this.search} />\n            </div>\n          </div>\n        </div>\n        <h2 style={styles.h2}>People</h2>\n        <section className=\"container\">\n          <div className=\"row\">\n          \n            {isLoaded && actors.length > 0 ? actors.map(actor => { const {id, name, birthday, image, fav} = actor; \n              const person = true;\n                    return <Card \n                            style={styles.card} \n                            key={id} alt={name+\" picture\"} \n                            birthday={birthday} \n                            image={image} \n                            title={name}\n                            fav={fav}\n                            addFav={(e)=>this.addFav(id,person,e)} \n                            detailed={()=>this.detailed(id,person)}\n                            id={id}\n                      />\n                  }): null\n            }\n          </div>\n        </section>\n        <h2 style={styles.h2}>Shows</h2>\n        <section className=\"container\">\n          <div className=\"row\">\n          \n          {isLoaded && shows.length > 0 ? shows.map(show => { const {id, name, rating, image, fav} = show;  \n            const person = false;\n            favList.forEach(function(item){\n              if(item.id === id){\n\n              }\n            })\n          \n                  return <Card \n                          style={styles.card} \n                          key={id} alt={name+\" picture\"} \n                          rating={\"Rating: \"+rating} \n                          image={image} \n                          title={name}\n                          id={id}\n                          fav={fav}\n                          addFav={()=>this.addFav(id,person)}\n                          detailed={()=>this.detailed(id,person)}\n                          />\n                  }): null\n          }\n            </div>\n        </section>\n        </div>\n      </div>\n    );\n  }\n}\n}\n\nexport default Home;\n\nconst styles = {\n  div: {\n      \n      display: \"grid\",\n      backgroundSize: '100%',\n      width: \"100%\",\n      hieght: \"100%\",\n      fontFamily: \"'Freckle Face', cursive\",\n      color: \"#F9D780\",\n\n  },\n  section:{\n      display: \"grid\",\n  },\n  card: {\n    fontFamily: \"'Freckle Face', cursive\",\n    color: \"#F9D780\",\n      \n  },\n  header:{\n    fontSize: \"84px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headerCol:{\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"3rem\"\n  },\n  searchCol: {\n    marginTop: \"1rem\"\n  },\n  h2: {\n    fontSize: \"64px\",\n    marginTop: \"10rem\",\n    marginLeft: \"15rem\"\n  },\n  \n};\n "]},"metadata":{},"sourceType":"module"}